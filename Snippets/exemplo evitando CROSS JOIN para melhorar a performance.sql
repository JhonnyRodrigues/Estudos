-- História: O Semae precisa identificar as matrículas que realizaram pagamento de dívida após a data de realização do corte de fornecimento de água por inadimplência.

-- O CrossJoin da query abaixo gerava um produto cartesiano de 195 mil ligações de água x 38 milhoes de registros de faturamento, aumentando muito a cardinalidade no Plano de Execução.
SELECT
	COUNT(UNIDADE.NR_MATRICULA_UNIDADE),
	UNIDADE.NR_MATRICULA_UNIDADE,
	DECODE(UNIDADE.ID_SITUAC_INSTAL,'1',
									'CANCELADA',
									'2',
									'CORTADA NO CAVALETE',
									'5',
									'CORTADA NO RAMAL'
	) AS SITUACAO_INSTAL,
	TO_CHAR(UNIDADE.DT_SITUACAO_INSTAL, 'DD/MM/YYYY') AS DT_SITUACAO_LIGACAO,
	DECODE(UNIDADE.TP_ATENDIMENTO,	0,
									'ÁGUA',
									1,
									'ESGOTO',
									2,
									'ÁGUA E ESGOTO',
									3,
									'INEXISTENTE'
	) AS TP_ATENDIMENTO,
	LTRIM((TIPO.DS_ITEM_TABELA || ' ') || LTRIM(TITULO.DS_ITEM_TABELA || ' ') || LOGRAD.NM_LOGRAD) AS LOGRADOURO,
	UNIDADE.NR_IMOVEL,
	UNIDADE.DS_COMPL_ENDERECO,
	BAIRRO.NM_BAIRRO AS BAIRRO,
	UNIDADE.NR_SETOR,
	UNIDADE.NR_GRUPO_FATMTO,
	OE.NM_ORGAO_EMPRESA AS REGIONAL,
	TO_CHAR(NVL(DT_LIGACAO_AGUA, UNIDADE.DT_CRIACAO),'DD/MM/YYYY') AS DT_CADASTRO,
	DECODE (USO_UNIDADE.TP_CATEG_CONSUMIDOR,'C',
											'COMERCIAL',
											'I',
											'INDUSTRIAL',
											'P',
											'PÚBLICA',
											'R',
											'RESIDENCIAL'
	) AS CATEGORIA,
	FNC_BUSCA_TARIFA(USO_UNIDADE.TP_TARIFA) TARIFA
FROM
	(
		SELECT
			CD_ITEM_TABELA,
			DS_ITEM_TABELA
		FROM
			TABELAS_SISTEMA
		WHERE
			NR_TABELA = 73
	) TITULO,
	(
		SELECT
			CD_ITEM_TABELA,
			DS_ITEM_TABELA
		FROM
			TABELAS_SISTEMA
		WHERE
			NR_TABELA = 65
	) TIPO,
	USO_UNIDADE,
	LOGRAD,
	ORGAO_EMPRESA OE,
	SETOR,
	SCI.UNIDADE,
	BAIRRO,
	FATURA F
WHERE
	TITULO.CD_ITEM_TABELA (+) = LOGRAD.CD_TITULO_LOGRAD
	AND TIPO.CD_ITEM_TABELA (+) = LOGRAD.TP_LOGRAD
	AND USO_UNIDADE.NR_MATRICULA_UNIDADE (+) = UNIDADE.NR_MATRICULA_UNIDADE
	AND LOGRAD.CD_MUNICIPIO (+) = UNIDADE.CD_MUNICIPIO
	AND LOGRAD.CD_LOGRAD (+) = UNIDADE.CD_LOGRAD
	AND (
		LOGRAD.CD_BAIRRO_INI = BAIRRO.CD_BAIRRO (+)
		AND LOGRAD.CD_MUNICIPIO = BAIRRO.CD_MUNICIPIO (+)
	)
	AND OE.TP_ORGAO_EMPRESA = SETOR.TP_ORGAO_EMPRESA
	AND OE.CD_ORGAO_EMPRESA = SETOR.CD_ORGAO_EMPRESA
	AND SETOR.CD_MUNICIPIO = UNIDADE.CD_MUNICIPIO
	AND SETOR.NR_SETOR = UNIDADE.NR_SETOR
	AND UNIDADE.ID_SITUAC_INSTAL NOT IN ('0', '1')
	AND UNIDADE.NR_MATRICULA_UNIDADE = F.NR_MATRICULA_UNIDADE
	AND F.ID_SITUACAO = '1'
	AND F.DT_PAGTO >= UNIDADE.DT_SITUACAO_INSTAL
GROUP BY
	OE.NM_ORGAO_EMPRESA,
	UNIDADE.NR_SETOR,
	UNIDADE.NR_UNIDADE,
	UNIDADE.ID_SITUAC_INSTAL,
	UNIDADE.DT_SITUACAO_INSTAL,
	UNIDADE.NR_MATRICULA_UNIDADE,
	UNIDADE.NR_IMOVEL,
	UNIDADE.DS_COMPL_ENDERECO,
	UNIDADE.TP_ATENDIMENTO,
	TIPO.DS_ITEM_TABELA,
	TITULO.DS_ITEM_TABELA,
	LOGRAD.NM_LOGRAD,
	UNIDADE.NR_IMOVEL,
	BAIRRO.NM_BAIRRO,
	UNIDADE.NR_MATRICULA_UNIDADE,
	UNIDADE.NR_GRUPO_FATMTO,
	USO_UNIDADE.TP_CATEG_CONSUMIDOR,
	USO_UNIDADE.TP_TARIFA,
	TO_CHAR(NVL(DT_LIGACAO_AGUA, UNIDADE.DT_CRIACAO), 'DD/MM/YYYY')
ORDER BY
	UNIDADE.DT_SITUACAO_INSTAL DESC;




-- A query então foi refatorada para evitar o CrossJoin com a tabela de faturamentos. Primeiro, filtrando apenas os registros de ligações pertinentes (25 mil), e depois vinculando com a tabela FATURA apenas para resgatar os valores de F.ID_SITUACAO e F.DT_PAGTO.
-- O tempo de execução da query caiu de 2m40s para 0,5s !!!
-- O custo reduziu de 70378 para 29852
-- a cardinalidade reduziu de 585100 para 30693
SELECT
	*
FROM (
	SELECT
		UNIDADE.NR_MATRICULA_UNIDADE,
		DECODE(UNIDADE.ID_SITUAC_INSTAL,'1',
										'CANCELADA',
										'2',
										'CORTADA NO CAVALETE',
										'5',
										'CORTADA NO RAMAL'
		) AS SITUACAO_INSTAL,
		UNIDADE.DT_SITUACAO_INSTAL, -- ADICIONADO PARA VINCULACAO EXTERNA
		TO_CHAR(UNIDADE.DT_SITUACAO_INSTAL, 'DD/MM/YYYY') AS DT_SITUACAO_LIGACAO,
		DECODE(UNIDADE.TP_ATENDIMENTO,	0,
										'ÁGUA',
										1,
										'ESGOTO',
										2,
										'ÁGUA E ESGOTO',
										3,
										'INEXISTENTE'
		) AS TP_ATENDIMENTO,
		LTRIM((TIPO.DS_ITEM_TABELA || ' ') || LTRIM(TITULO.DS_ITEM_TABELA || ' ') || LOGRAD.NM_LOGRAD) AS LOGRADOURO,
		UNIDADE.NR_IMOVEL,
		UNIDADE.DS_COMPL_ENDERECO,
		BAIRRO.NM_BAIRRO AS BAIRRO,
		UNIDADE.NR_SETOR,
		UNIDADE.NR_GRUPO_FATMTO,
		OE.NM_ORGAO_EMPRESA AS REGIONAL,
		TO_CHAR(NVL(DT_LIGACAO_AGUA, UNIDADE.DT_CRIACAO),'DD/MM/YYYY') AS DT_CADASTRO,
		DECODE (USO_UNIDADE.TP_CATEG_CONSUMIDOR,'C',
												'COMERCIAL',
												'I',
												'INDUSTRIAL',
												'P',
												'PÚBLICA',
												'R',
												'RESIDENCIAL'
		) AS CATEGORIA,
		FNC_BUSCA_TARIFA(USO_UNIDADE.TP_TARIFA) TARIFA
	FROM
--		(
--			SELECT
--				CD_ITEM_TABELA,
--				DS_ITEM_TABELA
--			FROM
--				TABELAS_SISTEMA
--			WHERE
--				NR_TABELA = 73
--		) TITULO,
--		(
--			SELECT
--				CD_ITEM_TABELA,
--				DS_ITEM_TABELA
--			FROM
--				TABELAS_SISTEMA
--			WHERE
--				NR_TABELA = 65
--		) TIPO,
--		USO_UNIDADE,
--		LOGRAD,
--		ORGAO_EMPRESA OE,
--		SETOR,
--		UNIDADE,
--		BAIRRO
		UNIDADE
	--	LEFT JOIN FATURA F ON F.NR_MATRICULA_UNIDADE = UNIDADE.NR_MATRICULA_UNIDADE -- MOVIDO PARA VINCULACAO EXTERNA
		LEFT JOIN USO_UNIDADE ON USO_UNIDADE.NR_MATRICULA_UNIDADE = UNIDADE.NR_MATRICULA_UNIDADE
		LEFT JOIN SETOR ON (SETOR.CD_MUNICIPIO = UNIDADE.CD_MUNICIPIO AND SETOR.NR_SETOR = UNIDADE.NR_SETOR)
		LEFT JOIN ORGAO_EMPRESA OE ON (OE.TP_ORGAO_EMPRESA = SETOR.TP_ORGAO_EMPRESA AND OE.CD_ORGAO_EMPRESA = SETOR.CD_ORGAO_EMPRESA)
		LEFT JOIN LOGRAD ON (LOGRAD.CD_MUNICIPIO = UNIDADE.CD_MUNICIPIO AND LOGRAD.CD_LOGRAD = UNIDADE.CD_LOGRAD)
		LEFT JOIN BAIRRO ON (LOGRAD.cd_bairro_ini = BAIRRO.cd_bairro AND LOGRAD.cd_municipio = BAIRRO.cd_municipio)
		LEFT JOIN (
			SELECT
				cd_item_tabela,
				ds_item_tabela
			FROM
				tabelas_sistema
			WHERE
				nr_tabela = 73
		) TITULO ON TITULO.CD_ITEM_TABELA = LOGRAD.CD_TITULO_LOGRAD
		LEFT JOIN (
			SELECT
				cd_item_tabela,
				ds_item_tabela
			FROM
				tabelas_sistema
			WHERE
				nr_tabela = 65
		) TIPO ON TIPO.CD_ITEM_TABELA = LOGRAD.TP_LOGRAD
	WHERE
--		TITULO.CD_ITEM_TABELA (+) = LOGRAD.CD_TITULO_LOGRAD
--		AND TIPO.CD_ITEM_TABELA (+) = LOGRAD.TP_LOGRAD
--		AND USO_UNIDADE.NR_MATRICULA_UNIDADE (+) = UNIDADE.NR_MATRICULA_UNIDADE
--		AND LOGRAD.CD_MUNICIPIO (+) = UNIDADE.CD_MUNICIPIO
--		AND LOGRAD.CD_LOGRAD (+) = UNIDADE.CD_LOGRAD
--		AND (LOGRAD.CD_BAIRRO_INI = BAIRRO.CD_BAIRRO (+) AND LOGRAD.CD_MUNICIPIO = BAIRRO.CD_MUNICIPIO (+))
--		AND OE.TP_ORGAO_EMPRESA = SETOR.TP_ORGAO_EMPRESA
--		AND OE.CD_ORGAO_EMPRESA = SETOR.CD_ORGAO_EMPRESA
--		AND SETOR.CD_MUNICIPIO = UNIDADE.CD_MUNICIPIO
--		AND SETOR.NR_SETOR = UNIDADE.NR_SETOR
--		AND 
		UNIDADE.ID_SITUAC_INSTAL NOT IN ('0', '1')
	GROUP BY
		OE.NM_ORGAO_EMPRESA,
		UNIDADE.NR_SETOR,
		UNIDADE.NR_UNIDADE,
		UNIDADE.ID_SITUAC_INSTAL,
		UNIDADE.DT_SITUACAO_INSTAL,
		UNIDADE.NR_MATRICULA_UNIDADE,
		UNIDADE.NR_IMOVEL,
		UNIDADE.DS_COMPL_ENDERECO,
		UNIDADE.TP_ATENDIMENTO,
		TIPO.DS_ITEM_TABELA,
		TITULO.DS_ITEM_TABELA,
		LOGRAD.NM_LOGRAD,
		UNIDADE.NR_IMOVEL,
		BAIRRO.NM_BAIRRO,
		UNIDADE.NR_MATRICULA_UNIDADE,
		UNIDADE.NR_GRUPO_FATMTO,
		USO_UNIDADE.TP_CATEG_CONSUMIDOR,
		USO_UNIDADE.TP_TARIFA,
		TO_CHAR(NVL(DT_LIGACAO_AGUA, UNIDADE.DT_CRIACAO), 'DD/MM/YYYY')
	ORDER BY
		UNIDADE.DT_SITUACAO_INSTAL DESC
	) LIGACOES
WHERE
	EXISTS (
		SELECT
			1 AS EXISTE
		FROM
			FATURA F
		WHERE
			LIGACOES.NR_MATRICULA_UNIDADE = F.NR_MATRICULA_UNIDADE
			AND F.ID_SITUACAO = '1'
			AND F.DT_PAGTO >= LIGACOES.DT_SITUACAO_INSTAL
			AND ROWNUM = 1
	)
ORDER BY
	LIGACOES.DT_SITUACAO_INSTAL DESC